package dev.vinyard.adventofcode.soluce.year${YEAR}.day${DAY};

import dev.vinyard.aoc.plugins.solution.api.Solution;
import dev.vinyard.aoc.plugins.solution.api.annotation.AdventOfCodeSolution;
import dev.vinyard.adventofcode.utils.FileReader;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CommonTokenStream;

import java.io.IOException;
import java.net.URISyntaxException;

#set($index = $math.sub($PART, 1))
#set ($url = $LINK)
#set ($description = $aocScrapper.getDescription($url, $SESSION_ID, $index).split("\n"))
#set ($title = $aocScrapper.getTitle($url, $SESSION_ID, 0))
@AdventOfCodeSolution(year = ${YEAR}, day = ${DAY}, part = ${PART}, description = "$title", link = "${LINK}", tags = "${TAGS}")
public class Day${DAY}Part${PART}Solution implements Solution<${RESPONSE_TYPE}> {

    /**
    #foreach($line in $description)
    * $line
    #end
    */
    @Override
    public ${RESPONSE_TYPE} solve(String input) {
        CharStream charStream = CharStreams.fromString(input);

        SolutionLexer lexer = new SolutionLexer(charStream);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        SolutionParser parser = new SolutionParser(tokens);
        // TODO get the ASD from the parser

        return ${TEST_RESPONSE};
    }
}
